JSON
 4. Создать внешний репозиторий c названием JSON.
заходим в аккаунт на github. Создаем репозиторий c именем GitHub. HW_2. CODE - Clone - HTTPS - copy URL
 5. Клонировать репозиторий JSON на локальный компьютер.
открываем GB. Прописываем 
git clone URL
 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json
 7. Добавить файл под гит.
git status
git add new.json
git status
 8. Закоммитить файл
git commit -m "add the first file"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
в терминале прописываем команду и вносим данные
cat >> new.json
{
 "ФИО" : "Худницкая О.А" ,
 "возраст" : 32 ,
 "количество_домашних_животных" : 1 ,
 "будущая_желаемая_зарплата" : "2000 $"
}
 11. Отправить изменения на внешний репозиторий.
git status
git add new.json
git status
git commit -m "add info about yourself"
git push
 12. Создать файл preferences.json
touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat >> preferences.json
{
 "Любимый_фильм" : "Свадебный переполох" ,
 "Любимый_сериал" : "Отчаянные домохозяйки" ,
 "Любимая_еда" : "Пицца" ,
 "Любимое_время года" : "Лето" ,
 "Страна,которую_хотели_бы_посетить" : "Португалия"
}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
cat > skill.json
 {
 "Список_скилов,которые_будут_изучены_на_курсе" : "Базвоая теория QA, HTTP, тестирование API, мобильное тестирование, терминал Linux, git, Jmeter"
}
 15. Отправить сразу 2 файла на внешний репозиторий.
git status
git add skill.json preferences.json
git status
git commit -m "add 2 file"
git push
 16. На веб интерфейсе создать файл bug_report.json.
Add file - Create new file - Name your file "bug_report.json"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Edit this file - добавить баг репорт в формате JSON
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
 git pull
